# SPDX-FileCopyrightText: 2025 Ryan Cao <hello@ryanccn.dev>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Release

on:
  push:
    tags: ["v*.*.*"]

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read
      id-token: write
      attestations: write

    uses: ./.github/workflows/build.yml
    with:
      disable-cache: true

  crates-io:
    name: crates.io
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # ratchet:actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # ratchet:dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Authenticate with crates.io
        uses: rust-lang/crates-io-auth-action@041cce5b4b821e6b0ebc9c9c38b58cac4e34dcc2 # ratchet:rust-lang/crates-io-auth-action@v1
        id: auth

      - name: Publish
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}

  github:
    name: GitHub Releases
    needs: build

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # ratchet:actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install git-cliff
        uses: taiki-e/install-action@dd43f737883340503e99bf3f3436c59549c98b66 # ratchet:taiki-e/install-action@git-cliff

      - name: Download artifacts
        id: download
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # ratchet:actions/download-artifact@v5
        with:
          path: /tmp/artifacts

      - name: Prepare assets
        env:
          ARTIFACTS: ${{ steps.download.outputs.download-path }}
        id: prepare
        run: |
          asset_path="/tmp/assets"
          mkdir -p "$asset_path"
          for artifact in "$ARTIFACTS"/*/; do
            basename "$artifact" | \
              xargs -I {} zip -jr "$asset_path"/{}.zip "$artifact"
          done

      - name: Generate changelog
        run: git-cliff --current --strip all | tail -n +3 > /tmp/changelog.md

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create --notes-file /tmp/changelog.md --draft --verify-tag "$TAG" /tmp/assets/*.zip
