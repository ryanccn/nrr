name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:
  workflow_dispatch:

jobs:
  rust-stable:
    strategy:
      matrix:
        system:
          - name: macos
            arch: x86_64
            runner: macos-latest
          - name: macos
            arch: aarch64
            runner: macos-14
          - name: windows
            arch: x86_64
            runner: windows-latest
          - name: linux-gnu
            arch: x86_64
            runner: ubuntu-latest

    runs-on: ${{ matrix.system.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --locked

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
           if-no-files-found: 'error'
           name: nrr-${{ matrix.system.arch }}-${{ matrix.system.name }}
           path: |
             ./target/release/nrr
             ./target/release/nrr.exe

  linux-static:
    strategy:
      matrix:
        arch: 
          - x86_64
          - aarch64

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v10

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v4

      - name: Build package
        run: |
          nix build .#nrr-static-${{ matrix.arch }} \
            --fallback \
            --out-link built-${{ matrix.arch }} \
            --print-build-logs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
           if-no-files-found: 'error'
           name: nrr-${{ matrix.arch }}-linux-musl
           path: ./built-${{ matrix.arch }}/bin/nrr
